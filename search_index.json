[["index.html", "Mijn Data Sciences portfolio Door: Stephanie de Wit Datum: 15-05-22 Tijdens het tweede deel van de Data Sciences for Biology minor te Hogeschool Utrecht heb ik gewerkt aan een portfolio van mijn vaardigheden binnen R. 1 Introductie", " Mijn Data Sciences portfolio Door: Stephanie de Wit Datum: 15-05-22 Tijdens het tweede deel van de Data Sciences for Biology minor te Hogeschool Utrecht heb ik gewerkt aan een portfolio van mijn vaardigheden binnen R. 1 Introductie Ik ben een nieuwsgierige, scherpe en gedreven Life Sciences studente van 24 jaar oud. Momenteel rond ik mijn derde studiejaar af met een Data Sciences minor en ben ik opzoek naar een uitdagende afstudeerstage. Ik smul van studiemateriaal over genetica, neurowetenshap, immunologie en tumorcelbiologie en werk graag met recombinante DNA technieken, celkweek en eiwit analyse technieken. Het is mijn ambitie om als moleculair bioloog onderzoek te doen naar het ontstaan, voorkomen en bestrijden van ziekten. Als ik niet aan het lezen ben in Campbell, Biology of documentaires kijk over het heelal, ga ik graag tafelen met vrienden, dansen in de discotheek, naar het museum of de dierentuin en op stedentripjes. "],["vaardigheid-1-semi-reproduceerbare-data-analyseren.html", "2 Vaardigheid 1: Semi-reproduceerbare data analyseren 2.1 C. elegans kweekplaat experiment", " 2 Vaardigheid 1: Semi-reproduceerbare data analyseren De Reproducible Research beweging streeft ernaar dat onderzoekers al hun data, gebruikte methodes en codes openbaar maken. Dit verhoogt de reproduceerbaarheid van hun onderzoek en daarmee de kwaliteit ervan, evenals het algehele vertrouwen in de wetenschap. Hieronder laat ik zien dat ik overweg kan met data die verkregen is volgens een niet- of semi-reproduceerbare workflow. 2.1 C. elegans kweekplaat experiment Volwassen C. elegans nematoden zijn blootgesteld aan verschillende concentraties naftaleen, 2,6-di-isopropylnaftaleen en decaan, waarna is onderzocht of deze blootstellingen en negatief effect hebben op het aantal nakomelingen. S-medium dient als negatieve controle voor dit effect, 1,5% ethanol dient als positieve controle. De belangrijkste variabelen in de gekregen dataset (CE.LIQ.FLOW.062_Tidydata.xlsx) zijn: expType: de behandelconditie. RawData: het aantal nakomelingen geteld na de incubatietijd. compName: de generieke naam van de stof. compConcentration: de concentratie van de stof. Gebruikte CRAN packages voor de analyse: {ggplot2} Het Excel bestand heeft een tidy opmaak, maar bevat verschillende, onnodige variabelen die voor elke onderzochte vial dezelfde waarde aannemen zijn. De stof concentraties worden gegeven in nM maar de concentratie ethanol wordt gegeven in procent. Verder missen vijf RawData waarden. Het bestand bevat één sheet waarin de aanpassingen aan de parameter levels zijn gedocumenteerd en één sheet met alle unieke level opties per parameter. Er mist wel een exacte beschrijven van de parameters en hun levels: zijn de graden in Celsius? Betekent het pct level van compConcentration procent? #Lees het bestand in in R als tibble: elegans&lt;-read_excel(here::here(&quot;data_raw&quot;, &quot;data01_assignment_1.1&quot;, &quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) summary(elegans) ## plateRow plateColumn vialNr dropCode ## Mode:logical Mode:logical Min. :1.000 Length:360 ## NA&#39;s:360 NA&#39;s:360 1st Qu.:1.000 Class :character ## Median :2.000 Mode :character ## Mean :2.375 ## 3rd Qu.:3.000 ## Max. :6.000 ## ## expType expReplicate expName expDate ## Length:360 Min. :3.00 Length:360 Min. :2020-11-30 ## Class :character 1st Qu.:3.00 Class :character 1st Qu.:2020-11-30 ## Mode :character Median :3.00 Mode :character Median :2020-11-30 ## Mean :3.75 Mean :2020-11-30 ## 3rd Qu.:3.75 3rd Qu.:2020-11-30 ## Max. :6.00 Max. :2020-11-30 ## ## expResearcher expTime expUnit expVolumeCounted ## Length:360 Min. :68 Length:360 Min. :50 ## Class :character 1st Qu.:68 Class :character 1st Qu.:50 ## Mode :character Median :68 Mode :character Median :50 ## Mean :68 Mean :50 ## 3rd Qu.:68 3rd Qu.:50 ## Max. :68 Max. :50 ## ## RawData compCASRN compName compConcentration ## Min. : 0.0 Length:360 Length:360 Length:360 ## 1st Qu.: 51.5 Class :character Class :character Class :character ## Median : 72.0 Mode :character Mode :character Mode :character ## Mean : 68.1 ## 3rd Qu.: 88.0 ## Max. :124.0 ## NA&#39;s :5 ## compUnit compDelivery compVehicle elegansStrain ## Length:360 Length:360 Length:360 Length:360 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## ## elegansInput bacterialStrain bacterialTreatment bacterialOD600 ## Min. :25 Length:360 Length:360 Min. :0.743 ## 1st Qu.:25 Class :character Class :character 1st Qu.:0.743 ## Median :25 Mode :character Mode :character Median :0.743 ## Mean :25 Mean :0.743 ## 3rd Qu.:25 3rd Qu.:0.743 ## Max. :25 Max. :0.743 ## ## bacterialConcX bacterialVolume bacterialVolUnit incubationVial ## Min. :8 Min. :300 Length:360 Length:360 ## 1st Qu.:8 1st Qu.:300 Class :character Class :character ## Median :8 Median :300 Mode :character Mode :character ## Mean :8 Mean :300 ## 3rd Qu.:8 3rd Qu.:300 ## Max. :8 Max. :300 ## ## incubationVolume incubationUnit incubationMethod incubationRPM ## Min. :1000 Length:360 Length:360 Min. :35 ## 1st Qu.:1000 Class :character Class :character 1st Qu.:35 ## Median :1000 Mode :character Mode :character Median :35 ## Mean :1000 Mean :35 ## 3rd Qu.:1000 3rd Qu.:35 ## Max. :1000 Max. :35 ## ## bubble incubateTemperature ## Mode:logical Min. :20 ## NA&#39;s:360 1st Qu.:20 ## Median :20 ## Mean :20 ## 3rd Qu.:20 ## Max. :20 ## De vijf missende waarden kunnen uit de tabel verwijderd worden, maar {ggplot2} grafieken negeren ze automatisch. Er moet het een en ander aangepast worden aan de ingelezen data voordat een fatsoenlijke grafiek gemaakt kan worden: A) Na het importeren van de data naar R, zijn de variabelen van data type veranderd. RawData is van het data type double geworden, dit moet integer zijn. Als de compConcentration variabele, nu van het data type character, niet als double wordt opgegeven, ontstaat een foute X-as. De variabele compName moet tot factor gemaakt worden voor gebruik in een {ggplot2} grafiek. B) Het percentage ethanol moet als volgt omgerekend worden naar nM: nMol/L = (percentage ethanol * dichtheid in g/L ) / (molaire massa in g/mol * 100) * 1000000 1.5% ethanol = 256891.686564 nmol/L 0.5% ethanol = 85630.562188 nmol/L De dichtheid van het gebruikte ethanol is nodig om de percentages om te rekenen naar nM, maar niet gegeven. Daarom wordt uitgegaan van de standaard 789 g/L. #Verander de ethanol concentraties van procent naar nM: elegans_nM &lt;- elegans elegans_nM$compConcentration &lt;- elegans_nM$compConcentration %&gt;% str_replace_all(&quot;1.5&quot;,&quot;256891.686564&quot;) elegans_nM$compConcentration &lt;- elegans_nM$compConcentration %&gt;% str_replace_all(&quot;0.5&quot;,&quot;85630.562188&quot;) elegans_nM$compUnit &lt;- elegans_nM$compUnit %&gt;% str_replace_all(&quot;pct&quot;,&quot;nM&quot;) Zet de stof concentraties op een log10-schaal en voeg variatie toe aan de punten tegen overlap. elegans_nM %&gt;% ggplot(aes(x = log10(as.double(compConcentration)), y = as.integer(RawData))) + geom_point(aes(colour = as.factor(compName), shape = as.factor(expType)), size = 1.5, position = &quot;jitter&quot;) + #Jitter voegt wat variatie toe tegen overlap tussen de punten labs(x = &quot;Log10(stof concentratie) (nM)&quot;, y = &quot;Aantal nakomelingen na blootstelling&quot;, colour = &quot;Stof&quot;, shape = &quot;Conditie&quot;) + theme_bw() Figure 2.1: Aantal C. elegans nakomelingen na verschillende blootstellingen (versie 1). Het aantal nakomelingen is geteld na incubatie voor een onbekende tijd van nematoden in S-medium en bij verschillende concentraties naftaleen, 2,6-di-isopropylnaftaleen, decaan en ethanol. De negatieve controle S-medium is gelijk gesteld aan een compConcentration van 0 pct, vandaar dat S-medium niet in de grafiek verschijnt. De log10 van 0 bestaat niet. Wat nog resteert is het normaliseren van de data. We zijn geïnteresseerd in hoeveel nematoden er meer of minder worden geboren na incubatie met een stof ten opzichte van de normale situatie. Dit is niet aftelezen aan de bovenstaande grafiek, omdat het aantal nakomelingen van de negatieve controle wegvallen. Ik normaliseer door van elke meting het aantal nakomelingen uit te drukken als fractie van het gemiddelde aantal nakomelingen na incubatie in S-medium. controlNegative &lt;- elegans_nM %&gt;% filter(expType == &quot;controlNegative&quot;) %&gt;% select(RawData) %&gt;% as_vector() mean(controlNegative) ## [1] 85.9 elegans_norm &lt;- elegans_nM %&gt;% mutate(RawData_normalized = RawData / mean(controlNegative)) elegans_norm %&gt;% ggplot(aes(x = log10(as.double(compConcentration)), y = as.integer(RawData_normalized))) + geom_point(aes(colour = as.factor(compName), shape = as.factor(expType)), size = 1.5, position = &quot;jitter&quot;) + labs(x = &quot;Log10(stof concentratie) (nM)&quot;, y = &quot;Fractie nakomelingen na blootstelling&quot;, colour = &quot;Stof&quot;, shape = &quot;Conditie&quot;) + theme_bw() Figure 2.2: Fracties C. elegans nakomelingen na verschillende blootstellingen. Voor elke blootstelling aan één van de stoffen in een bepaalde concentratie is de fractie nakomelingen berekend, relatief een het aantal nakomelingen binnen de negatieve controle. Er zijn alleen negatieve fracties aanwezig door de jitter optie. Conclusie Voor de positieve controle geldt, dat er duidelijk minder nematoden geboren worden na incubatie in 1,5% ethanol ten opzichte van in S-medium (fractie &lt;&lt; 1). Bij stof concentraties lager dan ~ 0.06 nM (oftewel log10s lager dan -1.25) worden er evenveel, minder of meer nematoden geboren als binnen de negatieve controle. Bij deze concentraties is er dus geen effect op het aantal nakomelingen. Voor incubatie bij hogere concentraties van de drie geteste stoffen geldt dat er minder nematoden geboren worden als binnen de negatieve controle (fractie &lt;&lt; 1). 2.1.1 Normalisatie met het {drc} package Op data zoals bovenstaande wordt gewoonlijk een dosis-response analyse uitgevoerd. Dit kan met het {drc} package. Hieronder volgt een versimpelde workflow voor een analyse met het log-logistic model. RPubs - Four-Parameter Log-Logistic Model (n.d.) beschrijft het modelleren met het {drc} package alsvolgt: De gemiddelde response (y) wordt gekarakteriseerd met een functie (f), die afhankelijk is van de dosis (x) en het type respons (). Het type respons is afhankelijk van de distributie van de data. Dus: voor een dosis x zullen de responses y gedistributeerd zijn rond functie f volgens . Generalized log-logistic function: f(x, (b, c, d, e)) = c + (d - c)/(1 + exp(b(logx) - log(e))). Fit het log-logistic model van llogistic() met drm() volgens drm(a, b = , c = llogistic(), d = , ) LL.3: The Three-Parameter Log-Logistic Function in Drc: Analysis of Dose-Response Curves (n.d.) Verkrijg een schatting van de het maximum, het minimum, de ED50 en de richtingscoëfficient met hun bijbehorende standaard errors, t-waarden en p-waarden met summary(drm_model) (The Three-Parameter Log-Logistic Function  LL.3 n.d.; LL.3: The Three-Parameter Log-Logistic Function in Drc: Analysis of Dose-Response Curves n.d.; RPubs - Four-Parameter Log-Logistic Model n.d.) Test de fit van het model met bijv. de goodness-of-fit test modelFit(drm_model). (The Three-Parameter Log-Logistic Function  LL.3 n.d.; LL.3: The Three-Parameter Log-Logistic Function in Drc: Analysis of Dose-Response Curves n.d.; RPubs - Four-Parameter Log-Logistic Model n.d.) Verkrijg de betrouwbaarheidsintervallen voor bovengenoemde vier parameters met confint(drm_model). (RPubs - Four-Parameter Log-Logistic Model n.d.) Bereken m.b.v. de bovengenoemde vier parameters de IC50. (RPubs - Four-Parameter Log-Logistic Model n.d.) Plot de dosis-respons curve met plot(drm_model). Argument log =  schakelt de default logaritmische x-as uit, broken = TRUE geeft ook de dosis 0 weer en er kan genormaliseerd worden: norm = TRUE en normref = 1. The Three-Parameter Log-Logistic Function  LL.3 (n.d.); LL.3: The Three-Parameter Log-Logistic Function in Drc: Analysis of Dose-Response Curves (n.d.), p. 3; RPubs - Four-Parameter Log-Logistic Model (n.d.); Ritz et al. (2015)] Voor het C. elegans experiment is het gemiddelde aantal nakomelingen binnen de negatieve controle gelijk gesteld aan 1 en het aantal nakomelingen uitgedrukt als fractie daarvan. "],["vaardigheid-2-open-source-analyse-reproduceren.html", "3 Vaardigheid 2: Open Source analyse reproduceren 3.1 Ripeta criteria 3.2 Analyse reproduceren", " 3 Vaardigheid 2: Open Source analyse reproduceren Met onderstaande uitwerkingen wil ik laten zien, dat ik artikelen op reproduceerbaarheid kan beoordelen en (een stukje van) een analyse kan nabootsen waarvan de gebruikte code openbaar is. 3.1 Ripeta criteria De reproduceerbaarheid van een artikel wordt gescored aan de hand van de Ripeta criteria. Ik heb hier het volgende Open Source artikel van Pubmed Central beoordeeld: Chaimayo, C., Kaewnaphan, B., Tanlieng, N. et al. Rapid SARS-CoV-2 antigen detection assay in comparison with real-time RT-PCR assay for laboratory diagnosis of COVID-19 in Thailand. Virol J 17, 177 (2020) Dit artikel vergelijkt de prestaties van een SARS-CoV-2 antigeen sneltest, de Standard Q COVID-19 Ag kit van Biosensor®, met die van een RT-qPCR, specifiek de Allplex 2019-nCoV Assay van Seegene®. Een RT-qPCR vormde op het moment van publiatie als de gouden standaard voor het diagnosticeren van SARS-CoV-2 infecties. Er zijn 454 neus-keel monsters afgenomen bij participanten die mogelijk besmet waren met COVID-19. Elk monster is gebruikt voor een RT-qPCR en een antigeen sneltest. De antigeen sneltest liet een gevoeligheid en specificiteit zien vergelijkbaar aan de RT-qPCR en kan gebruikt worden voor screening op SARS-CoV-2 (Chaimayo et al. 2020). Onderstaande tabel is overgenomen uit het artikel en laat zien hoe voor zes participanten de (ruwe) uitslagen van de PCR en antigeen sneltest niet overenkomen. Table 3.1: Participanten waarvoor de PCR en antigeen uitslagen niet overeen komen Gender Age Initial diagnosis Specimen type PCR Ct-value E PCR Ct-value RdRP PCR Ct-value N Rapid Ag test result Interpretation F 33 Pneumonia NP swab + throat swab 31.18 39.20 35.54 Negative False negative F 67 Pre-operative NP swab + throat swab &gt; 40 &gt; 40 &gt; 40 Positive False positive M 75 Pre-operative NP swab + throat swab &gt; 40 &gt; 40 &gt; 40 Positive False positive F 61 Pre-operative NP swab + throat swab &gt; 40 &gt; 40 &gt; 40 Positive (weakly) False positive F 83 Pre-operative NP swab + throat swab &gt; 40 &gt; 40 &gt; 40 Positive (weakly) False positive F 64 Pre-operative NP swab + throat swab &gt; 40 &gt; 40 &gt; 40 Positive (weakly) False positive Table 3.2: Ripeta criteria scores voor Chutikarn et al. 2020 Transparancy Criteria Definition Response Type Score Study Purpose A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the study objective. Binary TRUE Data Availability Statement A statement, in an individual section offset from the main body of text, that explains how or if one can access a studys data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section. Binary TRUE Data Location Where the articles data can be accessed, either raw or processed. Found Value All data generated or analysed are included in the published article and its additional files. Study Location Author has stated in the methods section where the study took place or the datas country/region of origin. Binary; Found Value Bangkok, Thailand Author Review The professionalism of the contact information that the author has provided in the manuscript. Found Value Navin Horthongham is corresponding author. navin.hor@mahidol.ac.th Ethics Statement A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data. Binary TRUE Funding Statement A statement within the manuscript indicating whether or not the authors received funding for their research. Binary TRUE Code Availability Authors have shared access to the most updated code that they used in their study, including code used for analysis. Binary FALSE 3.2 Analyse reproduceren Ik heb een Open Source paper gekozen uit een gegeven studie die heeft onderzocht hoe reproduceerbaar papers gepubliceerd onder het Open Source beleid nou écht zijn. Van dit paper heb ik een stuk code gereproduceerd. Het gekozen artikel uit de gegeven studie (Paper06): Arthur G. Samuel, Psycholinguists should resist the allure of linguistic units as perceptual units, Journal of Memory and Language (2020) De bijbehorende code (Reproducing.Rmd) en dataset (osfstorage-archive/Exp2_Final_Adaptors_CVtestitems) zijn te vinden op OSF. De codes in deze RMarkdown zijn gebruikt om de figuren te maken die in dit paper weergegeven worden. Op een schaal van 1 (zeer slecht) tot 5 (zeer goed) geef ik de leesbaarheid van de codes in dit bestand een 2. Hieronder reproduceer ik een deel van de data om figuur 2 uit het artikel na te maken. Het koste me moeite om dit figuur te reproduceren, met een score van 3 op een schaal van 1 (zeer moeilijk) tot 5 (zeer makkelijk). Een stuk code met een helperfunctie van de RMarkdown auteur voor het inlezen van de data: knitr::opts_chunk$set(echo = TRUE) rm(list=ls()) if(!require(tidyverse)){install.packages(&#39;tidyverse&#39;)} if(!require(lme4)){install.packages(&#39;lme4&#39;)} if(!require(readr)){install.packages(&#39;readr&#39;)} # # A helper function for reading in the unconventionally structured data files read_exp_data &lt;- function(filenames_BF_ID, to_skip){ BF_ID &lt;- NULL for (i in filenames_BF_ID){ adaptor &lt;- substring(i, 1, 1) # first letter of the filename temp &lt;- read.csv(i, skip = to_skip) %&gt;% select(1:8) temp1 &lt;- temp %&gt;% select(1,2,3,4) if (grepl(&#39;X&#39;, colnames(temp1)[3])){ temp1 &lt;- NULL } else { temp1 &lt;- temp1 %&gt;% mutate(participant.id = colnames(temp1)[3], adaptor = adaptor) %&gt;% rename(response = colnames(temp1)[3], RT = colnames(temp1)[4]) } temp2 &lt;- temp %&gt;% select(1,2,5,6) if (grepl(&#39;X&#39;, colnames(temp2)[3])){ temp2 &lt;- NULL } else { temp2 &lt;- temp2 %&gt;% mutate(participant.id = colnames(temp2)[3], adaptor = adaptor) %&gt;% rename(response = colnames(temp2)[3], RT = colnames(temp2)[4]) } temp3 &lt;- temp %&gt;% select(1,2,7,8) if (grepl(&#39;X&#39;, colnames(temp3)[3])){ temp3 &lt;- NULL } else { temp3 &lt;- temp3 %&gt;% mutate(participant.id = colnames(temp3)[3], adaptor = adaptor) %&gt;% rename(response = colnames(temp3)[3], RT = colnames(temp3)[4]) } BF_ID &lt;- rbind(BF_ID, temp1, temp2, temp3) } return(BF_ID) } Een stuk code voor het berekenen van het aantal participanten in (waarschijnlijk) de No-Release conditie: wd &lt;- &quot;C:/Users/steph/DSFB2/workflows_portfolio_OPNIEUW/data_raw/data02_assignment_1.2&quot; setwd(wd) filenames_ID &lt;- list.files(pattern = &quot;ID&quot;) ID &lt;- read_exp_data(filenames_ID, to_skip =4) %&gt;% mutate(participant.id = tolower(participant.id)) nlevels(as.factor(ID$participant.id)) ## [1] 33 Een stuk code voor het berekenen van het aantal participanten in (waarschijnlijk) de adaptation condition: setwd(wd) filenames_FAD &lt;- list.files(pattern = &quot;FAD&quot;) FAD &lt;- read_exp_data(filenames_FAD, to_skip =6) nlevels(as.factor(FAD$participant.id)) ## [1] 34 Een stuk code voor het filteren van participanten uit de (waarschijnlijk) No-Release conditie: setwd(wd) # filtering to_filter &lt;- ID %&gt;% drop_na() %&gt;% mutate(adaptor = ifelse(adaptor == &quot;B&quot;, &quot;B&quot;, &quot;D&quot;), B = ifelse(response == 4, 1, 0), D = ifelse(response == 1, 1, 0), adaptorB = ifelse(adaptor == &quot;B&quot;, 1, -1), adaptorD = ifelse(adaptor == &quot;D&quot;, 1, -1), Bgrade = parse_number(as.character(AudioWaveFile1))-1) %&gt;% filter(Bgrade == 1 | Bgrade == 7) %&gt;% group_by(participant.id, Bgrade) %&gt;% summarize(D_response = mean(D)) %&gt;% pivot_wider(id_cols = participant.id, names_from = Bgrade, values_from = D_response) %&gt;% mutate(diff = `1` - `7`) %&gt;% filter(diff &lt; 0.6) to_filter ## # A tibble: 4 x 4 ## # Groups: participant.id [4] ## participant.id `1` `7` diff ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 asav 0.944 0.389 0.556 ## 2 kjol 0.722 0.194 0.528 ## 3 kpao 0.972 0.833 0.139 ## 4 ttys 0.972 1 -0.0278 Deze codes geven mij dezelfde uitkomst als de RMarkdown auteur. Nu kan ik een figuur, figuur 2 uit het artikel, reproduceren: wd &lt;- &quot;C:/Users/steph/DSFB2/workflows_portfolio_OPNIEUW/data_raw/data02_assignment_1.2&quot; setwd(wd) FAD &lt;- FAD %&gt;% drop_na() %&gt;% filter(! participant.id %in% to_filter$participant.id) %&gt;% mutate(B = ifelse(response == 1, 1, 0), D = ifelse(response == 4, 1, 0), adaptorB = ifelse(adaptor == &quot;B&quot;, 1, -1), adaptorD = ifelse(adaptor == &quot;D&quot;, 1, -1), Bgrade = parse_number(as.character(WaveFile))-1,#AFAIU the lower the number the closer to B, but I might be wrong RT = RT*1000) # Figure 2 FAD %&gt;% group_by(participant.id, Bgrade, adaptor) %&gt;% summarize(part_mean = mean(D)) %&gt;% group_by(Bgrade, adaptor) %&gt;% summarize(acc = mean(part_mean)) %&gt;% ggplot(aes(x = Bgrade, y = acc, color = adaptor)) + geom_point() + geom_line() Deze figuur ziet er volgens de auteur hetzelfde uit als figuur 2 in het artikel. De vormen kloppen, maar de Y-as en as titels zijn door de RMarkdown auteur anders gekozen. De Y-as laat fracties zien i.p.v. percentages. Dit kan gemakkelijk aangepast worden: FAD %&gt;% group_by(participant.id, Bgrade, adaptor) %&gt;% summarize(part_mean = mean(D)) %&gt;% group_by(Bgrade, adaptor) %&gt;% summarize(acc = mean(part_mean) * 100) %&gt;% ggplot(aes(x = Bgrade, y = acc, color = adaptor)) + geom_point() + geom_line() + theme_classic() + scale_colour_manual(values=c(&quot;blue&quot;,&quot;red&quot;),labels=c(&quot;B adapt&quot;,&quot;D adapt&quot;), name = &quot;&quot;) + labs(title=&quot;Released Final Position Adaptors on CV Test Series&quot;, x = &quot;Continuum Step&quot;, y = &quot;Percent \\&quot;d\\&quot; Report&quot;) + ylim(0,100) Figure 3.1: Identification of the members of the /ba/-/da/ test series, as a function of the adaptation condition, for adaptors that included released final stops. After adaptation with final-/d/ words (red curve/squares) identification as D was reduced compared to adaptation with final-/b/ words (blue curve/circles). Dit onderschrift is letterlijk overgenomen uit de paper zelf. "],["vaardigheid-3-folder-structuur-gebruiken-volgens-de-guerilla-principles.html", "4 Vaardigheid 3: Folder structuur gebruiken volgens de Guerilla Principles", " 4 Vaardigheid 3: Folder structuur gebruiken volgens de Guerilla Principles Hieronder demonstreer ik met een folder tree van de Data Sciences for Biology 1 DAUR2 lessen, hoe een goede folder structuur eruit ziet. In een notendop: De RMarkdown files van een project staan in de folder Rmd. Geschreven functies die worden aangehaald in de RMarkdown files staan in de folder R. Scripts met overige code die aangehaald worden in de RMarkdown files staan in de folder code. Ruwe data staan in de folder data_raw. Binnen deze folder heeft elke dataset een eigen folder In deze folder staat een README file met informatie over hoe de dataset tot stand is gekomen, een folder supporting voor benodigdheden en eventueel een folder v01 voor een oudere versie van de dataset. Opgeschoonde en/of tidy gemaakte, ruwe data staan in sub-folders in de folder data. In deze folder is ook een Excel bestand aanwezig met een overzicht van aanwezige data, genaamd data-log. In de folder images staan de afbeeldingen die gebruikt worden in de RMarkdown files. In de folder doc worden overige documenten opgeslagen. #install.packages(&quot;fs&quot;) library(fs) dir_tree(path = &quot;C:/Users/steph/DSFB1/daur2&quot;) ## C:/Users/steph/DSFB1/daur2 ## +-- code ## +-- data ## | \\-- data-log.xlsx ## +-- data_raw ## | +-- data01_rnaseq_airway ## | | +-- README.txt ## | | +-- supporting ## | | \\-- v01 ## | +-- data02_rnaseq_ipsc ## | | +-- README.txt ## | | \\-- supporting ## | +-- data03_rnaseq_onecut ## | | +-- README.txt ## | | \\-- supporting ## | +-- data04_metagenomics_reader_data ## | | +-- HU1_MOCK1_L001_R1_001_fastqc.html ## | | +-- HU1_MOCK1_L001_R1_001_fastqc.zip ## | | +-- HU1_MOCK1_L001_R2_001_fastqc.html ## | | +-- HU1_MOCK1_L001_R2_001_fastqc.zip ## | | +-- mock1.bracken ## | | +-- mock1.kraken ## | | +-- mock1.report ## | | +-- mock1_bracken_species.biom ## | | +-- mock1_bracken_species.report ## | | +-- README.txt ## | | \\-- supporting ## | | \\-- setup_meta_env.yml ## | \\-- data05_metagenomics_formative_data ## | +-- README.txt ## | \\-- supporting ## +-- daur2.Rproj ## +-- doc ## | \\-- EindopdrachtDAUR2_V6.pdf ## +-- images ## | +-- meta_lesson6_R1.png ## | +-- meta_lesson6_R2.png ## | \\-- screenshot_BCLXL_2_reversed.png ## +-- R ## \\-- Rmd ## +-- Eindopdracht_DAUR2_V6.html ## +-- Eindopdracht_DAUR2_V6.Rmd ## +-- formatieve_opdracht_rnaseq.html ## +-- formatieve_opdracht_rnaseq.Rmd ## +-- les1.Rmd ## +-- les2.Rmd ## +-- les3.Rmd ## +-- les4.Rmd ## +-- les6.Rmd ## +-- les7.Rmd ## \\-- les8.Rmd "],["vaardigheid-4-opmaken-met-rmarkdown-en-html-syntax.html", "5 Vaardigheid 4: Opmaken met RMarkdown en HTML syntax", " 5 Vaardigheid 4: Opmaken met RMarkdown en HTML syntax Er zijn eindeloos veel opties om een RMarkdown file overzichtelijker en mooier te maken. Hieronder laat ik met een CV zien, dat ik overweg kan met RMarkdown syntax en een RMarkdown kan koppelen aan een CSS file met HTML syntax. Ik heb het template HTML resume van {pagedown} gebruikt om met RMarkdown een CV als PDF bestand te genereren. Het is niet mogelijk om dergelijke templates toe te voegen aan een gitbook als deze. YAML header: #--- #title: &quot;Stephanie&#39;s resume&quot; #author: Stephanie de Wit #date: &quot;22-05-2022&quot; #output: # pagedown::html_resume: # css: # - override.css # - resume # self_contained: false #knit: pagedown::chrome_print #--- CSS file: #* { # /* Override default margins*/ # --pagedjs-margin-right: 0.2in; # --pagedjs-margin-left: 0.2in; # --pagedjs-margin-top: 0.2in; # --pagedjs-margin-bottom: 0.2in; #} # # #:root{ # --sidebar-width: 15rem; /* side bar width */ # --sidebar-background-color: #2EB3B3; # --decorator-border: 2px solid #35D1D1; /* change color and thickness of timeline */ # #} # #.decorator::after{ # background-color: #35D1D1; /* change color timeline dots */ # #} # # #/* Define the font family here */ #body{ # font-family: &quot;Roboto&quot;, sans-serif; # #} Body: #Aside #========================================================#======================== # # #![Stephanie de Wit](https://avatars.githubusercontent.com/u/103999467?s=400&amp;u=9d6a4da194685107008731008461da14c27693fa&amp;v=4){width=90%} # # #Contact Info {#contact} #-------------------------------------------------------------------------------- # #- &lt;i class=&quot;fa fa-envelope&quot;&gt;&lt;/i&gt; stephanie.dewit@student.hu.nl #- &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; [github.com/stephaniedewit](https://github.com/stephaniedewit) #- &lt;i class=&quot;fa fa-phone&quot;&gt;&lt;/i&gt; +31 6******** # #Soft skills {#skills} #-------------------------------------------------------------------------------- # #- Perseverance # #- Precision # #- Independence # #- Organizational # #- Social skills # #Hard skills {#skills} #-------------------------------------------------------------------------------- # #- Experienced in cell culture, recombinant DNA #techniques and protein analysis. # #- Skilled in R and Bash. # #- Experienced with statistical analysis and next generation sequencing data analysis. # #Main #================================================================================ # #Stephanie de Wit {#title} #-------------------------------------------------------------------------------- # #### Currently searching for a graduation internship # #Enthusiastic, third-year Life Sciences student with a grade average of 8.8, looking for a challenging graduation internship. I am fond of study material about genetics, immunology and tumor cell biology and enjoy working with recombinant DNA techniques, cell culture and protein chromatography. It is my ambition to conduct research into the origin, prevention and control of diseases as a molecular biologist. # # #Education {data-icon=graduation-cap data-concise=true} #-------------------------------------------------------------------------------- # #### Institute for Life sciences &amp; Chemistry, Hogeschool Utrecht # #Biologie en Medisch Laboratoriumonderzoek (Life Sciences) # #Utrecht, The Netherlands # #2019 - today # #::: concise #- __Minor (today): _Data Sciences for Biology_ 1 &amp; 2__. Content: Bash, _next generation sequencing_, RStudio, _RNA-sequencing_, _metagenomics_, GitHub, SQL. #- __Specialisation: _Biomolecular Research_ (BMR)__. Courses: Biotechnologie, Projecticum _Biomolecular Research_, Practicum Moleculaire Biologie, _Advanced Labtools_, Tumorcelbiologie. #::: # # Workexperience {data-icon=suitcase} #-------------------------------------------------------------------------------- # #### Schoolproject: Projecticum Biomolecular Research # #Performed in collaboration with Genmab BV. # #Utrecht, The Netherlands # #september 2021 - januari 2022 # #::: concise #Using _size exclusion chromatography_ we investigated whether Hexabody® antibodies have a lower tendency to hexamerize after oxidation. #::: "],["portfolio-assignment-3.2-plan-van-aanpak-vrije-besteding.html", "6 Portfolio assignment 3.2: Plan van Aanpak vrije besteding", " 6 Portfolio assignment 3.2: Plan van Aanpak vrije besteding Over twee jaar wil ik werkzaam zijn als biomedisch analist en bijdragen aan onderzoek naar de ontwikkeling, bestrijding en genezing van ziekten. Daarnaast wil ik vaardiger blijven worden in R zodat ik het vernuftig kan gebruiken om mijn onderzoeksresultaten te presenteren en analyseren. Ik ben goed opweg: op dit moment ben ik opzoek naar een afstudeerstage en heb ik al 15/30 EC behaald binnen de Data Science for Biology 1 &amp; 2 minor. Tijdens mijn BMR specialisatie projecticum voor Genmab heb ik gewerkt met een HPLC. De UV-detectie resultaten kwamen op de computer binnen via de software Clarity Lite. De ruwe data van interesse is uit Clarity Lite gekopieerd(ctrl + C) en geplakt in een Excel bestand, waarna er verschillende berekeningen en omzettingen op los zijn gelaten. Er zijn tabellen gemaakt in PowerPoint, grafieken in Excel en er zijn statistische tests uitgevoerd in SPSS. Met het oog op een mogelijke stage bij Genmab, waar ik wellicht weer met een HPLC zal werken, wil ik gaan onderzoeken of het mogelijk is om deze analyse stappen meer data science te maken: minder stappen, minder handmatig werk en minder vatbaar voor fouten. Ik wil uitzoeken of ik de ruwe Clarity Lite data aan een package o.i.d. kan voeren voor een volledige data analyse in RStudio. (#tab:planning en logboek)Tabel 1: Planning voor vrij te besteden uren. Stap Wat Wanneer Hoelang 1 Oriënteren op de (R) packages e.d. die beschikbaar zijn voor chromatografie data analyse in RStudio. ? 2,5 uur 2 Uitzoeken in welke formats de data uit Clarity Lite geëxporteerd kan worden. ? 1,5 uur 3 Afspraak maken om op de HPLC computer op HL7 te mogen snuffelen. ? 2 uur 4 Helder maken: wat wil ik precies dat de packages doen? ? 1,5 uur 5 Twee packages o.i.d. kiezen om verder uit te diepen. ? x 6 Installeren van packages, werkzaamheid krijgen. ? 2 uur 7 Packages testen met nep data of data geëxporteerd uit Clarity Lite. ? 2 uur 8 Verder verdiepen in het gebruik van de packages. ? ~ 9  ?  10  ?  (#tab:planning en logboek)Tabel 2: Logboek. Dag Stap Gedaan Tijd Maandag 1   Dinsdag 1   "],["vaardigheid-5-correct-refereren-m.b.v.-een-reference-manager.html", "7 Vaardigheid 5: Correct refereren m.b.v. een reference manager 7.1 DSFB2 2022 Project Regenwormen: Introductie", " 7 Vaardigheid 5: Correct refereren m.b.v. een reference manager Parallel aan de Workflows lessen van Data Sciences for Biology 2 heb ik samen met twee medestudenten een project uitgevoerd. Hieronder laat ik met een introductie op dit project zien, dat ik de reference manager Zotero kan gebruiken om te parafraseren. 7.1 DSFB2 2022 Project Regenwormen: Introductie Oud-student aan Hogeschool Utrecht Jory van Thiel heeft, samen met instituten in Leiden en Liverpool, onderzoek gedaan naar de convergente evolutie van het defensieve gif van spugende cobras. Drie cobra soorten hebben convergent, of te wel onafhankelijk van elkaar, het vermogen ontwikkeld om gif te spugen ter verdediging, in tegen stelling tot andere cobras die gif inspuiten in een prooi. Jory en de andere onderoekers hebben laten zien dat het gif van spugende soorten wordt gekarakteriseerd door een significante upregulatie in fosfolipase A2, wat de activatie van sensorische zoogdier neuronen door cytotoxines in het gif stimuleert. Dit veroorzaakt meer pijn in, bijvoorbeeld, de ogen van een roofdier dan gif van bijtende cobras zal doen (Kazandjian et al. 2021). BMR projecticum studenten zijn afgelopen jaar door Jory gevraagd om te onderzoeken wat het effect is van fosfolipase A2 op skeletspiercellen. Hogeschool Utrecht docenten Ronald Vlasblom en Robert Jan Veldman keken daarnaast naar het effect van fosfolipase A2 op ratten hartjes in een Langendorff opstelling. In een dergelijke opstelling worden de hartjes via de aorta retrograde geperfundeerd met een zuurstof- en voedingsrijke oplossing. De omgekeerde vloeistofdruk, van aorta naar linker hartkamer, zorgt ervoor dat de aorta kleppen sluiten en de vloeistof naar de kransslagaders wordt gedwongen. Dit voedt de hartspier, die hierdoor enkele uren buiten de rat kan blijven kloppen (Broadley 1979). Ronald en Robert Jan lieten zien dat na toevoeging van 40 µg gif van de spugende cobra Naja pallida snel een verstoord hartritme en zelfs een hartstilstand volgde (Project Regenwormen: Data Sciences for Biology 2 n.d.). De Universiteit van Liverpool wil deze observaties graag gebruiken binnen hun onderzoek naar de acute myotoxiciteit van slangengif en de ontwikkeling van blokkers om dit effect te ondervangen. Op dit moment helpen studenten onder leiding van Ronald met het ontwikkelen van proefdiervrije onderzoeksmodellen voor deze onderzoeksvragen. Dat wil hier zeggen: modellen waarbij geen gebruik wordt gemaakt van ratten hartjes. Ronald en Robert Jan lieten zien dat defensief gif een zelfde effect heeft op de contractiekracht en -frequentie van het gladde spierweefsel van de crop-gizzard van een regenworm (Project Regenwormen: Data Sciences for Biology 2 n.d.). De crop-gizzard wordt uit een regenworm geïsoleerd en in een orgaanbad van Ringer buffer aan een verplaatsingsmeter gehangen. In de buffer blijft het spierweefsel enige tijd functioneel. Als het contracteert, verplaatst het de hefboom van de verplaatsingsmeter. Hoe sterker of vaker het weefsel contracteert, hoe sterker of vaker de hefboom verplaatst. Deze verplaatsingen worden geregistreerd als veranderingen in spanning over tijd en komen op de laptop van Ronald en de studenten binnen in het programma LabChart (Project Regenwormen: Data Sciences for Biology 2 n.d.; Thema 3: Regenworm: DOFAR Dierkundig Onderzoek n.d.). Om het effect van een giftoediening te bepalen, worden veranderingen in contractiekracht en -frequentie met het oog opgepikt uit de tracings in LabChart. Dit is tijdsintensief en gevoelig voor fouten. Daarom heeft Ronald mij en twee medestudenten gevraagd om een automatische analyse voor de tracings te coderen. De komende weken tot de zomervakantie zullen wij proberen om voor Ronald en zijn studenten een interactieve Shiny app te bouwen die, voor gedefinieerde tijdsvensters van interesse, met behulp van grafieken de kracht en duur van elke contractie laat zien evenals de time to contraction, time to relaxation en contractie frequentie. "],["vaardigheid-6-werken-met-relational-databases.html", "8 Vaardigheid 6: Werken met relational databases 8.1 Samenvoegen van virus-activiteit dummy data met gapminder dataset", " 8 Vaardigheid 6: Werken met relational databases Tijdens een data analyse wordt vaak de informatie uit verschillende databases gecombineerd. Een gemeenschappelijk gebruikte taal voor het ophalen, beheren en opslaan van data uit gerelateerde databases is SQL. In dergelijke databases is data georganiseerd in tabellen die aan elkaar gekoppeld kunnen worden gebaseerd op gemeenschappelijke eigenschappen. Met het onderstaande voorbeeld laat ik zien, dat ik met SQL de informatie uit drie verschillende tabellen in DBeaver kan samenvoegen. 8.1 Samenvoegen van virus-activiteit dummy data met gapminder dataset Ik maak eerst drie tabellen aan in RStudio: één met de gapminder dataset van het {dslabs} package en twee tabellen met datasets waarin voor verschillende landen de Influenza of Knokkelkoorts activiteit meerdere keren per jaar gemeten is. #Tabel 1: gapminder_df &lt;- as.data.frame(gapminder) head(gapminder_df, 3) ## country year infant_mortality life_expectancy fertility population ## 1 Albania 1960 115.4 62.87 6.19 1636054 ## 2 Algeria 1960 148.2 47.50 7.65 11124892 ## 3 Angola 1960 208.0 35.98 7.32 5270844 ## gdp continent region ## 1 NA Europe Southern Europe ## 2 13828152297 Africa Northern Africa ## 3 NA Africa Middle Africa #Tabel 2: flu_df &lt;- as.data.frame(read.csv(here::here( &quot;flu_data.csv&quot;), skip = 11)) head(flu_df, 3) ## Date Argentina Australia Austria Belgium Bolivia Brazil Bulgaria Canada ## 1 2002-12-29 NA NA NA NA NA 174 NA NA ## 2 2003-01-05 NA NA NA NA NA 162 NA NA ## 3 2003-01-12 NA NA NA NA NA 174 NA NA ## Chile France Germany Hungary Japan Mexico Netherlands New.Zealand Norway ## 1 NA NA NA NA NA NA NA NA NA ## 2 NA NA NA NA NA NA NA NA NA ## 3 1 NA NA NA NA NA NA NA NA ## Paraguay Peru Poland Romania Russia South.Africa Spain Sweden Switzerland ## 1 NA 329 NA NA NA NA NA NA NA ## 2 NA 315 NA NA NA NA NA NA NA ## 3 NA 314 NA NA NA NA NA NA NA ## Ukraine United.States Uruguay ## 1 NA NA NA ## 2 NA NA NA ## 3 NA NA NA #Tabel 3: dengue_df &lt;- as.data.frame(read.csv(here::here( &quot;dengue_data.csv&quot;), skip = 11)) head(dengue_df, 3) ## Date Argentina Bolivia Brazil India Indonesia Mexico Philippines ## 1 2002-12-29 NA 0.101 0.073 0.062 0.101 NA NA ## 2 2003-01-05 NA 0.143 0.098 0.047 0.039 NA NA ## 3 2003-01-12 NA 0.176 0.119 0.051 0.059 0.071 NA ## Singapore Thailand Venezuela ## 1 0.059 NA NA ## 2 0.059 NA NA ## 3 0.238 NA NA De Influenza en Knokkelkoorts data is niet tidy. Ik maak de tabellen zelf tidy met: flu_df &lt;- pivot_longer(data = flu_df, cols=c(2:30), names_to = &quot;country&quot;, values_to = &quot;influenza_activity&quot;) dengue_df &lt;- pivot_longer(data = dengue_df, cols=c(2:11), names_to = &quot;country&quot;, values_to = &quot;dengue_activity&quot;) Voordat ik de tabellen ga samenvoegen in DBeaver, zorg ik er eerst voor dat de variabelen waarop ik de tabellen wil samenvoegen, land en datum, hetzelfde zijn. In de gapminder tabel is de datum aanwezig als jaartallen in een kolom year, In de andere tabellen is de datum aanwezig als jaar-maand-dag in een kolom Date. Tevens is het belangrijk dat de land en datum kolommen dezelfde titel hebben en van hetzelfde datatype zijn. # Zorg dat er in de Influenza en Knokkelkoorts tabel een kolom aanwezig is met de jaartallen, net als in de gapminder tabel: flu_df &lt;- separate(data = flu_df, col = Date, into = c(&quot;year&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) dengue_df &lt;- separate(data = dengue_df, col = Date, into = c(&quot;year&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) # Maak nieuwe tabellen, met de Influenza of Knokkelkoorts activiteit per jaar i.p.v. per dag: flu_df &lt;- flu_df %&gt;% group_by(country, year) %&gt;% summarise_each(funs(sum), influenza_activity) dengue_df &lt;- dengue_df %&gt;% group_by(country, year) %&gt;% summarise_each(funs(sum), dengue_activity) ## Afgekeken van https://stackoverflow.com/questions/25089665/error-only-defined-on-a-data-frame-with-all-numeric-variables-with-ddply-on-lar # Maak in deze tabellen de kolommen waarop wordt samengevoegd van hetzelfde datatype als in de gapminder tabel: flu_df$country &lt;- as.factor(flu_df$country) dengue_df$country &lt;- as.factor(dengue_df$country) flu_df$year &lt;- as.integer(flu_df$year) dengue_df$year &lt;- as.integer(dengue_df$year) # Maak opnieuw dataframes van de tabellen: flu_df &lt;- as.data.frame(flu_df) dengue_df &lt;- as.data.frame(dengue_df) # Sla drie dataframes op als CSV en RDS files: write.csv(gapminder_df, file = &quot;gapminder_df.csv&quot;) write.csv(flu_df, file = &quot;flu_df.csv&quot;) write.csv(dengue_df, file = &quot;dengue_df.csv&quot;) saveRDS(gapminder_df, &quot;C:/Users/steph/DSFB2/portfolio_book/gapminder_df.rds&quot;) saveRDS(flu_df, &quot;C:/Users/steph/DSFB2/portfolio_book/flu_df.rds&quot;) saveRDS(dengue_df, &quot;C:/Users/steph/DSFB2/portfolio_book/dengue_df.rds&quot;) De kolommen met land en datum zijn nu hetzelfde en de tabellen kunnen geüpload worden naar DBeaver: library(DBI) # Maak verbinding met mijn database in DBeaver: con &lt;- dbConnect(RPostgres::Postgres(), dbname = &quot;workflowsdb&quot;, host=&quot;localhost&quot;, port=&quot;5432&quot;, user=&quot;postgres&quot;, password=&quot;...&quot;) # Stuur de tabellen naar de database: dbWriteTable(con, &quot;flu_df&quot;, flu_df) dbWriteTable(con, &quot;dengue_df&quot;, dengue_df) dbWriteTable(con, &quot;gapminder_df&quot;, gapminder_df) # Sluit de verbinding weer: dbDisconnect(con) Om de data(overdracht) te inspecteren, heb ik in DBeaver de Data, Properties en ER Diagram tabs van de tabellen bekeken. Daarnaast heb ik de volgende SQL queries uitgevoerd, waarmee ik specifieke data uit de tabellen opvraag en controleer of dit correct werkt: De queries gaven de verwachtte output. Ze zijn vertaald naar een zelfde inspectie in R: str(dengue_df) ## &#39;data.frame&#39;: 140 obs. of 3 variables: ## $ country : Factor w/ 10 levels &quot;Argentina&quot;,&quot;Bolivia&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... ## $ year : int 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 ... ## $ dengue_activity: num NA NA 1.53 1.03 1.01 ... str(flu_df) ## &#39;data.frame&#39;: 406 obs. of 3 variables: ## $ country : Factor w/ 29 levels &quot;Argentina&quot;,&quot;Australia&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... ## $ year : int 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 ... ## $ influenza_activity: int NA NA 8843 8627 8966 10267 9299 7952 6946 5541 ... str(gapminder_df) ## &#39;data.frame&#39;: 10545 obs. of 9 variables: ## $ country : Factor w/ 185 levels &quot;Albania&quot;,&quot;Algeria&quot;,..: 1 2 3 4 5 6 7 8 9 10 ... ## $ year : int 1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ... ## $ infant_mortality: num 115.4 148.2 208 NA 59.9 ... ## $ life_expectancy : num 62.9 47.5 36 63 65.4 ... ## $ fertility : num 6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ... ## $ population : num 1636054 11124892 5270844 54681 20619075 ... ## $ gdp : num NA 1.38e+10 NA NA 1.08e+11 ... ## $ continent : Factor w/ 5 levels &quot;Africa&quot;,&quot;Americas&quot;,..: 4 1 1 2 2 3 2 5 4 3 ... ## $ region : Factor w/ 22 levels &quot;Australia and New Zealand&quot;,..: 19 11 10 2 15 21 2 1 22 21 ... # Per land de Influenza activiteit, Knokkelkoorts activiteit en kindersterfte in 2009: head(flu_df %&gt;% filter(year == 2009) %&gt;% select(country, influenza_activity, year)) ## country influenza_activity year ## 1 Argentina 7952 2009 ## 2 Australia 22796 2009 ## 3 Austria 47117 2009 ## 4 Belgium 10320 2009 ## 5 Bolivia 14516 2009 ## 6 Brazil 10984 2009 head(dengue_df %&gt;% filter(year == 2009) %&gt;% select(country, dengue_activity, year)) ## country dengue_activity year ## 1 Argentina 16.739 2009 ## 2 Bolivia 10.362 2009 ## 3 Brazil 8.211 2009 ## 4 India 4.549 2009 ## 5 Indonesia 9.228 2009 ## 6 Mexico 14.228 2009 head(gapminder_df %&gt;% filter(year == 2009) %&gt;% select(country, infant_mortality, year)) ## country infant_mortality year ## 1 Albania 15.4 2009 ## 2 Algeria 24.3 2009 ## 3 Angola 112.2 2009 ## 4 Antigua and Barbuda 8.2 2009 ## 5 Argentina 13.4 2009 ## 6 Armenia 17.0 2009 # De laagst gemeten Influenza activiteit, Knokkelkoorts activiteiten kindersterfte: head(dengue_df %&gt;% select(country, dengue_activity, year) %&gt;% arrange(dengue_activity)) ## country dengue_activity year ## 1 Singapore 0.059 2002 ## 2 India 0.062 2002 ## 3 Brazil 0.073 2002 ## 4 Bolivia 0.101 2002 ## 5 Indonesia 0.101 2002 ## 6 Bolivia 0.427 2015 head(flu_df %&gt;% select(country, influenza_activity, year) %&gt;% arrange(influenza_activity)) ## country influenza_activity year ## 1 Sweden 106 2010 ## 2 Sweden 153 2006 ## 3 Sweden 169 2008 ## 4 Brazil 174 2002 ## 5 Sweden 179 2007 ## 6 Sweden 201 2011 head(gapminder_df %&gt;% select(country, infant_mortality, year) %&gt;% arrange(infant_mortality)) ## country infant_mortality year ## 1 Luxembourg 1.5 2015 ## 2 Luxembourg 1.6 2012 ## 3 Iceland 1.6 2013 ## 4 Luxembourg 1.6 2013 ## 5 Iceland 1.6 2014 ## 6 Luxembourg 1.6 2014 # De jaartallen in de gapminder dataset: gapminder_df %&gt;% select(year) %&gt;% arrange() %&gt;% unique() %&gt;% as.character() ## [1] &quot;1960:2016&quot; De inspectie in R gaf dezelfde resultaten als de queries. De tabellen kunnen nu samengevoegd worden gebaseerd op de compound key van de tabellen country en year. Ik doe dit eerst in R: #readRDS(here::here(&quot;gapminder_df.rds&quot;)) #readRDS(here::here(&quot;flu_df.rds&quot;)) #readRDS(here::here(&quot;dengue_df.rds&quot;)) # Voeg flu_df en dengue_df samen...: flu_dengue &lt;- left_join(flu_df, dengue_df, by = c(&quot;country&quot;, &quot;year&quot;)) #...en voeg gapminder_df toe: flu_dengue_gapminder_R &lt;- left_join(flu_dengue, gapminder_df, by = c(&quot;country&quot;, &quot;year&quot;)) head(flu_dengue_gapminder_R, 5) ## country year influenza_activity dengue_activity infant_mortality ## 1 Argentina 2002 NA NA 17.1 ## 2 Argentina 2003 NA NA 16.6 ## 3 Argentina 2004 8843 1.533 16.0 ## 4 Argentina 2005 8627 1.035 15.3 ## 5 Argentina 2006 8966 1.007 14.6 ## life_expectancy fertility population gdp continent region ## 1 74.3 2.38 37889443 242076212334 Americas South America ## 2 74.5 2.34 38309475 263468585945 Americas South America ## 3 75.0 2.31 38728778 287258675094 Americas South America ## 4 75.3 2.29 39145491 313626005874 Americas South America ## 5 75.3 2.27 39558750 340177780212 Americas South America en vervolgens in DBeaver: De output tabel van bovenstaande querie is opgeslagen als een CSV file: flu_dengue_gapminder.csv. flu_dengue_gapminder &lt;- read_csv(here::here(&quot;flu_dengue_gapminder.csv&quot;)) #kbl(head(flu_dengue_gapminder, 10), caption = &quot;__De gapminder dataset samengevoegd met de Influenza en \\nKnokkelkoorts activiteit data__&quot;) %&gt;% kable_styling(full_width = F, bootstrap_options = &quot;striped&quot;, position = &quot;left&quot;) %&gt;% column_spec(1:5, bold = TRUE) library(DT) DT::datatable(head(flu_dengue_gapminder, 10)) summary(flu_dengue_gapminder) ## Country Year Influenza_activity Dengue_activity ## Length:406 Min. :2002 Min. : 106 Min. : 0.073 ## Class :character 1st Qu.:2005 1st Qu.: 3302 1st Qu.: 1.508 ## Mode :character Median :2008 Median : 9214 Median : 4.303 ## Mean :2008 Mean : 23372 Mean : 5.001 ## 3rd Qu.:2012 3rd Qu.: 32278 3rd Qu.: 7.872 ## Max. :2015 Max. :155577 Max. :16.739 ## NA&#39;s :72 NA&#39;s :354 ## infant_mortality life_expectancy fertility population ## Min. : 2.000 Min. :64.70 Min. :1.150 Min. : 3324096 ## 1st Qu.: 3.700 1st Qu.:74.17 1st Qu.:1.420 1st Qu.: 9072979 ## Median : 5.850 Median :78.25 Median :1.755 Median : 20977828 ## Mean : 9.641 Mean :77.20 Mean :1.838 Mean : 42737637 ## 3rd Qu.:13.325 3rd Qu.:80.80 3rd Qu.:1.990 3rd Qu.: 46527412 ## Max. :53.700 Max. :83.20 Max. :3.980 Max. :207847528 ## NA&#39;s :42 NA&#39;s :42 NA&#39;s :42 NA&#39;s :42 ## gdp continent region ## Min. :7.214e+09 Length:406 Length:406 ## 1st Qu.:5.680e+10 Class :character Class :character ## Median :2.616e+11 Mode :character Mode :character ## Mean :5.748e+11 ## 3rd Qu.:6.370e+11 ## Max. :5.218e+12 ## NA&#39;s :146 Tijd om de daadwerkelijke data te gaan analyseren. Ik wil eerst een overzicht van per jaar, per land de gemiddelde Influenza activiteit, Knokkelkoorts activiteit, kindersterfte, levensverwachting, geboorten en populatie over de periode van 2002 - 2015. Ik vermoed dat Knokkelkoorts over het algemeen vooral voorkwam in (sub)tropische gebieden én dat er meer kindersterfte heeft plaatsgevonden in landen waarin in een bepaald jaar de Influenza of Knokkelkoorts activiteit zeer hoog was. # Bereken de gemiddelden van de variabelen per jaar en land: FLU &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_Influenza_act = mean(Influenza_activity)) DENG &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_Knokkelkoorts_act = mean(Dengue_activity)) MORT &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_kindersterfte = mean(infant_mortality)) LIFE &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_levensverwachting= mean(life_expectancy)) FERT &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_geboorten = mean(fertility)) POPU &lt;- flu_dengue_gapminder %&gt;% group_by(Country, Year) %&gt;% summarise(Gem_populatie = mean(population)) # Voeg de gemiddelden samen tot een tabel: desc_stat &lt;- flu_dengue_gapminder %&gt;% select(Country, Year) %&gt;% unique %&gt;% mutate(FLU, DENG, MORT, LIFE, FERT, POPU) %&gt;% arrange(Year) #kbl(tail(desc_stat, 58), caption = &quot;__Per jaar, per land de gemiddelden van de gemeten variabelen__&quot;) %&gt;% kable_styling(full_width = F, bootstrap_options = &quot;striped&quot;, position = &quot;left&quot;) %&gt;% column_spec(1:2, bold = TRUE) library(DT) DT::datatable(tail(desc_stat,58)) Ik ben geïnteresseerd in de trends van Influenza en Knokkelkoorts activiteit door de jaren heen en wil het verband tussen deze activiteit en kindersterfte toetsen. Figure 8.1: Influenza activiteit door de jaren heen. Voor 29 landen het aantal Influenza gevallen van 2002 tot en met 2015. # Plot 2: Knokkelkoorts activiteit door de jaren heen fdg2 &lt;- flu_dengue_gapminder %&gt;% filter(Dengue_activity &gt; 0) ggplot(data = fdg2, aes(x = Year, y = Dengue_activity)) + geom_line(aes(color = Country), alpha = 0.8) + labs(x = &quot;Jaar&quot;, y = &quot;Knokkelkoorts activiteit (gevallen)&quot;, color = &quot;Land&quot;) + theme_bw() Figure 8.2: Knokkelkoorts activiteit door de jaren heen. Voor 4 landen het aantal Knokkelkoorts gevallen van 2002 tot en met 2015. # Plot 3: Verband tussen Influenza_activity en infant_mortality per land door de jaren heen fdg3 &lt;- flu_dengue_gapminder %&gt;% filter(Influenza_activity &gt; 0 &amp; infant_mortality &gt; 0) cor.test(fdg3$Influenza_activity, fdg3$infant_mortality, method=c(&quot;pearson&quot;)) #p-value = 0.6713, geen stat. sig. verband ## ## Pearson&#39;s product-moment correlation ## ## data: fdg3$Influenza_activity and fdg3$infant_mortality ## t = 0.42482, df = 301, p-value = 0.6713 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.08844289 0.13677987 ## sample estimates: ## cor ## 0.0244791 cor_coefficient &lt;- round(cor.test(fdg3$Influenza_activity, fdg3$infant_mortality, method=c(&quot;pearson&quot;))$estimate,2) ggplot(data = fdg3, aes(x = Influenza_activity, y = infant_mortality)) + geom_point(aes(color = Country), size = 1, alpha = 0.8) + geom_smooth(se = F, color = &quot;red&quot;) + labs(y = &quot;Kindersterfte (aantal)&quot;, x = &quot;Influenza activiteit (gevallen)&quot;) + theme_bw() + annotate(&quot;text&quot;, x = 112500, y = 45, size = 4, color = &quot;red&quot;, label = paste(&quot;Pearson&#39;s r = &quot;, cor_coefficient)) Figure 8.3: Per land het verband tussen Influenza activiteit en kindersterfte door de jaren heen. Voor 29 landen is van 2002 tot en met 2015 per jaar het aantal Influenza gevallen en de sterfte onder kinderen gemeten. # Plot 4: Verband tussen Dengue_activity en infant_mortality per land door de jaren heen fdg4 &lt;- flu_dengue_gapminder %&gt;% filter(Dengue_activity &gt; 0 &amp; infant_mortality &gt; 0) ggplot(data = fdg4, aes(x = Dengue_activity, y = infant_mortality)) + geom_point(aes(color = Country), size = 1, alpha = 0.8) + geom_smooth(se = F, color = &quot;red&quot;) + labs(y = &quot;Kindersterfte (aantal)&quot;, x = &quot;Knokkelkoorts activiteit (gevallen)&quot;) + theme_bw() + annotate(&quot;text&quot;, x = 10, y = 50, size = 4, color = &quot;red&quot;, label = paste(&quot;Pearson&#39;s r = &quot;, cor_coefficient)) Figure 8.4: Per land het verband tussen Knokkelkoorts acitviteit en kindersterfte door de jaren heen. Voor 29 landen is van 2002 tot en met 2015 per jaar het aantal Knokkelkoorts gevallen en de sterfte onder kinderen gemeten. CONCLUSIE "],["vaardigheid-7-een-r-package-maken.html", "9 Vaardigheid 7: Een R package maken", " 9 Vaardigheid 7: Een R package maken R packages zijn collecties van functies en data sets die gebruikt worden om tools te delen binnen de community. Van het inlezen van ruwe data tot het maken van tabellen en grafieken: overal worden packages voor gebruikt. Ik heb zelf ook een R package gemaakt: {paratests}. Dit package bestaat op dit moment uit vier functies die het uitvoeren van (non)-parametrische toetsen makkelijker maken. Specifiek zijn dit functies voor een staafdiagram van gemiddelden, Shapiro Wilk test, ANOVA en verband grafiek. Via deze link kan mijn package gedownload worden, of run devtools::install_github(stephaniedewit/paratests) in RStudio Console. Na het runnen van library(paratests) kunnen de functies aangehaald worden. Run ?functie_naam() voor informatie over het gebruik van een functie of run browseVignettes(paratests) voor een demonstratie van het package. "],["vaardigheid-8-rmarkdowns-parameteriseren.html", "10 Vaardigheid 8: RMarkdowns parameteriseren 10.1 ECDC data nieuwgemelde COVID-19-gevallen en -doden", " 10 Vaardigheid 8: RMarkdowns parameteriseren Vaak wilt men de parameters binnen een analyse kunnen variëren, zoals de dataset waarop de analyse wordt uitgevoerd. Hieronder laat ik met een voorbeeld zien, dat ik RMarkdown parameterisatie kan gebruiken om soepel te switchen tussen parameters. 10.1 ECDC data nieuwgemelde COVID-19-gevallen en -doden Gebaseerd op publieke data van de European Center for Disease Prevention and Control (ECDC), heb ik een geparameteriseerd RMarkdown rapport geschreven dat voor een gegeven land en periode per dag het aantal nieuwgemelde COVID-19-gevallen en -doden laat zien. De te variëren parameters worden aan de YAML header toegevoegd binnen het params veld en ingesteld volgens: params: parameter_1: karakter parameter_2: numerieke waarde parameter_3: numerieke waarde In een R chunk wordt een parameter aangehaald met: params$parameter_naam. Klik hier voor een voorbeeld van het rapport voor Nederland in februari, maart en april 2022. Het is onmogelijk gebleken om parameters toe te voegen aan een gitbook RMarkdown. Het is onmogelijk gebleken om een numerieke range op te geven als parameter, bijvoorbeeld maand 3 t/m 5. Daarom heb ik besloten om een code te schrijven die voor elke opgegeven maand ook de gevallen en doden van de maand ervoor en erna laat zien. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
